{"id":"ejercicios/herencia.html","dependencies":[{"name":"/Users/saaib/Documents/Dev/MediaPlayer/package.json","includedInParent":true,"mtime":1596000178698}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Herencia Prototipal</title>\n</head>\n<body>\n  <a href=\"/ejercicios/\">Go back</a>\n  <p><em>Abre la consola</em></p>\n\n  <script>/*herencia prototipal es lo que conecta a hero.saludar con hero.__proto__ saludar\n    \n    - todo en JS acaba en el objeto 'objeto'\n    - la manera en la que se maneja la herencia es\n    - El objeto 'object' es el punto de partida de todos los objetos en javascript, eso incluye a las 'clases' y a las funciones\n    */\nfunction Hero(name) {\n  // definimos hero\n  this.name = name;\n}\n\nHero.prototype.saludar = function () {\n  console.log(\"Hola, soy \".concat(this.name));\n};\n\nvar zelda = new Hero('Zelda'); //-- Propiedades de la instancia\n//console.log('Name: ' + zelda.name)\n//-- propiedades de la clase, donde estan las instancias\n//console.log('Saludar: ' + zelda.saludar)\n//-- desde la instancia tenemos algunos metodos que ya existen y que podemos usar\n\nconsole.log('Saludar: ' + zelda.toString);</script>\n</body>\n</html>"},"sourceMaps":null,"error":null,"hash":"57f70ac85e5ca3ad302013731c3595db","cacheData":{"env":{}}}