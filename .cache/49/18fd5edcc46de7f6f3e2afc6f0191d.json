{"id":"ejercicios/cancelfetch.html","dependencies":[{"name":"/Users/saaib/Documents/Dev/MediaPlayer/package.json","includedInParent":true,"mtime":1596000178698}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Cancel fetch</title>\n</head>\n<body>\n  <a href=\"/ejercicios/\">Go back</a>\n  <p><em>Abre la consola</em></p>\n  \n  <button id=\"load\">Load HUGE Image</button>\n  \n  <button id=\"stop\" disabled=\"\">Stop Fetching</button>\n\n  <img id=\"huge-image\">\n  \n  \n  <script>function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar url = 'https://upload.wikimedia.org/wikipedia/commons/4/41/Wac_nearside_3000.jpg';\nvar img = document.getElementById('huge-image');\nvar stopButton = document.getElementById('stop');\nvar loadButton = document.getElementById('load');\n\nfunction startLoading() {\n  loadButton.disabled = true;\n  loadButton.innerText = 'Loading...';\n  stopButton.disabled = false;\n}\n\nfunction stopLoading() {\n  loadButton.disabled = false;\n  loadButton.innerText = 'Load HUGE Image';\n  stopButton.disabled = true;\n}\n\nvar controller;\nloadButton.onclick = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  var response, blob, imgUrl;\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          startLoading();\n          controller = new AbortController();\n          _context.prev = 2;\n          _context.next = 5;\n          return fetch(url, {\n            signal: controller.signal\n          });\n\n        case 5:\n          response = _context.sent;\n          _context.next = 8;\n          return response.blob();\n\n        case 8:\n          blob = _context.sent;\n          console.log('termino');\n          _context.next = 12;\n          return URL.createObjectURL(blob);\n\n        case 12:\n          imgUrl = _context.sent;\n          img.src = imgUrl;\n          _context.next = 19;\n          break;\n\n        case 16:\n          _context.prev = 16;\n          _context.t0 = _context[\"catch\"](2);\n          console.log(_context.t0);\n\n        case 19:\n          stopLoading();\n\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[2, 16]]);\n}));\n\nstopButton.onclick = function () {\n  controller.abort();\n  stopLoading();\n};</script>\n</body>\n</html>"},"sourceMaps":null,"error":null,"hash":"ebe5e45667396988d79a20497f299978","cacheData":{"env":{}}}