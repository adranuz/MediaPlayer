{"id":"ejercicios/proxy.html","dependencies":[{"name":"/Users/saaib/Documents/Dev/MediaPlayer/package.json","includedInParent":true,"mtime":1596000178698}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Proxy</title>\n</head>\n<body>\n  <a href=\"/ejercicios/\">Go back</a>\n  <p><em>Abre la consola</em></p>\n\n  <script src=\"https://cdn.jsdelivr.net/npm/fast-levenshtein@2.0.6/levenshtein.js\"></script>\n  <script>//corre levenshtein en un ejemplo\nvar leve = window.Levenshtein.get(\"Javascript\", \"Java\");\nconsole.log(leve); //un objeto indefenso con informacion \n\nvar target = {\n  red: 'Rojo',\n  green: 'Verde',\n  blue: 'Azul'\n}; //objeto con funciones de handle verificacion \n\nvar handler = {\n  //cuando sea llamado \n  // obj=target\n  // prop=valor que se quiere leer\n  get: function get(obj, prop) {\n    debugger;\n\n    if (prop in obj) {\n      // si el valor existe dentro de target...\n      return obj[prop]; //regresa ese valor del objeto\n    } //itera en el target\n\n\n    var suggestion = Object.keys(obj).find(function (key) {\n      //y encuentra lo que tenga un levenshtein menor a 3\n      return Levenshtein.get(key, prop) < 3;\n    }); //en caso de que encontremos algo con levenshtein\n\n    if (suggestion) {\n      console.log(\"\".concat(prop, \" no se encontr\\xF3, quisiste decir \").concat(suggestion, \"?\"));\n    }\n\n    return obj[prop];\n  }\n}; //antes de que algo llegue al objeto target lo queremos manejar con el proxy\n\nvar p = new Proxy(target, handler);</script>\n</body>\n</html>"},"sourceMaps":null,"error":null,"hash":"20e73214939704407d7850f809226169","cacheData":{"env":{}}}